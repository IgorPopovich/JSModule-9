{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,IAAIC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAChCG,EAAYJ,SAASC,cAAc,yBACnCI,EAAQ,EAEZ,SAASC,EAAeC,EAAUC,GAChC,OAAO,IAAIC,SAAQ,CAAEC,EAASC,KACNC,KAAKC,SAAW,GAGlCH,EAAQ,C,SAAEH,EAAUO,MAAAN,IAEpBG,EAAO,C,SAAEJ,EAAUO,MAAAN,GAAQ,G,CAInC,SAASO,IACPV,EAAQ,EACRN,EAAMiB,MAAQ,GACdd,EAAKc,MAAQ,GACbb,EAAOa,MAAQ,E,CAIjBZ,EAAUa,iBAAiB,SAAUC,IACnCA,EAAMC,iBACNC,YAAW,KAETd,EAAcD,EAAOH,EAAKc,OACzBK,MAAK,EAACd,SAAEA,EAAUO,MAAAQ,MACfC,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBlB,QAAiBe,OAC5DjB,GAAK,IAEVqB,OAAM,EAACnB,SAAEA,EAAUO,MAAAa,MAChBJ,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAAoBrB,QAAiBoB,OAC3DtB,GAAK,IAGX,IAAIwB,EAAUC,aAAY,IAC1BxB,EAAcD,EAAOH,EAAKc,OACzBK,MAAK,EAACd,SAAEA,EAAUO,MAAAiB,MACb1B,GAASF,EAAOa,QAClBgB,cAAcH,GACdd,KAEAQ,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBlB,QAAiBwB,OAC5D1B,GAAK,IAEVqB,OAAM,EAACnB,SAAEA,EAAUO,MAAAmB,MACd5B,GAASF,EAAOa,QAClBgB,cAAcH,GACdd,KAEAQ,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAAoBrB,QAAe0B,OAC3D5B,GAAO,KACPH,EAAKc,MAAM,GACbjB,EAAMiB,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nlet delay = document.querySelector('input[name=\"delay\"]');\nlet step = document.querySelector('input[name=\"step\"]');\nlet amount = document.querySelector('input[name=\"amount\"]');\nlet btnSubmit = document.querySelector('button[type=\"submit\"]');\nlet count = 1;\n\nfunction createPromise( position, delay ) {\n  return new Promise(( resolve, reject ) => {\n    const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n})}\n\nfunction stopFunc () {\n  count = 0\n  delay.value = ''\n  step.value = ''\n  amount.value = ''\n}\n\n\nbtnSubmit.addEventListener('click', (event) => {\n  event.preventDefault();\n  setTimeout(() => {\n\n    createPromise(count, step.value)\n    .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        count++\n    })\n    .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        count++\n    })\n\n    let timerId = setInterval(() => \n    createPromise(count, step.value)\n    .then(({ position, delay }) => {\n      if (count >= amount.value) {\n        clearInterval(timerId); \n        stopFunc()\n      }\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        count++\n    })\n    .catch(({ position, delay }) => {\n      if (count >= amount.value) {\n        clearInterval(timerId);\n        stopFunc()\n      }\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        count++\n    }), step.value);\n  },  delay.value)\n})\n\n\n/*\n      if (count <= 1) {\n        steped = 0\n      } else {\n        steped = step.value\n      }\n      */"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$btnSubmit","$47d4ff9957288465$var$count","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","Math","random","delay","$47d4ff9957288465$var$stopFunc","value","addEventListener","event","preventDefault","setTimeout","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","timerId","setInterval","delay4","clearInterval","delay5"],"version":3,"file":"03-promises.9f6a889f.js.map"}