{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,IAAIC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAChCG,EAAYJ,SAASC,cAAc,yBACnCI,EAAQ,EACRC,EAAM,EAEV,SAASC,EAAeC,EAAUC,GAChC,OAAO,IAAIC,SAAQ,CAAEC,EAASC,KACNC,KAAKC,SAAW,GAGlCH,EAAQ,C,SAAEH,EAAUO,MAAAN,IAEpBG,EAAO,C,SAAEJ,EAAUO,MAAAN,GAAQ,G,CAInC,SAASO,IACPX,EAAQ,EACRN,EAAMkB,MAAQ,GACdf,EAAKe,MAAQ,GACbd,EAAOc,MAAQ,GACfX,EAAM,C,CAGRF,EAAUc,iBAAiB,SAAUC,IACnCb,EAAMc,OAAOrB,EAAMkB,OACnBE,EAAME,iBACNC,YAAW,KAETf,EAAcF,EAAOC,GACpBiB,MAAK,EAACf,SAAEA,EAAUO,MAAAS,MACfC,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBnB,QAAiBgB,OAC5DnB,IACFC,GAAOc,OAAOlB,EAAKe,MAAM,IAE5BW,OAAM,EAACpB,SAAEA,EAAUO,MAAAc,MAChBJ,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAoBtB,QAAiBqB,OAC3DxB,IACFC,GAAOc,OAAOlB,EAAKe,MAAM,IAG7B,IAAIc,EAAUC,aAAY,IAC1BzB,EAAcF,EAAOC,GACpBiB,MAAK,EAACf,SAAEA,EAAUO,MAAAkB,MACb5B,GAASF,EAAOc,QAClBiB,cAAcH,GACdf,KAEAS,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBnB,QAAiByB,OAC5D5B,IACFC,GAAOc,OAAOlB,EAAKe,MAAM,IAE5BW,OAAM,EAACpB,SAAEA,EAAUO,MAAAoB,MACd9B,GAASF,EAAOc,QAClBiB,cAAcH,GACdf,KAEAS,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAoBtB,QAAe2B,OAC3D9B,IACAC,GAAOc,OAAOlB,EAAKe,MAAM,KACzBf,EAAKe,MAAM,GACblB,EAAMkB,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nlet delay = document.querySelector('input[name=\"delay\"]');\nlet step = document.querySelector('input[name=\"step\"]');\nlet amount = document.querySelector('input[name=\"amount\"]');\nlet btnSubmit = document.querySelector('button[type=\"submit\"]');\nlet count = 1;\nlet num = 0;\n\nfunction createPromise( position, delay ) {\n  return new Promise(( resolve, reject ) => {\n    const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n})}\n\nfunction stopFunc () {\n  count = 0;\n  delay.value = '';\n  step.value = '';\n  amount.value = '';\n  num = 0;\n}\n\nbtnSubmit.addEventListener('click', (event) => {\n  num = Number(delay.value)\n  event.preventDefault();\n  setTimeout(() => {\n\n    createPromise(count, num)\n    .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        count++\n        num += Number(step.value)\n    })\n    .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        count++\n        num += Number(step.value)\n    })\n\n    let timerId = setInterval(() => \n    createPromise(count, num)\n    .then(({ position, delay }) => {\n      if (count >= amount.value) {\n        clearInterval(timerId); \n        stopFunc()\n      }\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        count++\n        num += Number(step.value)\n    })\n    .catch(({ position, delay }) => {\n      if (count >= amount.value) {\n        clearInterval(timerId);\n        stopFunc()\n      }\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        count++\n        num += Number(step.value)\n    }), step.value);\n  },  delay.value)\n})\n\n\n/*\n      if (count <= 1) {\n        steped = 0\n      } else {\n        steped = step.value\n      }\n      */"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$btnSubmit","$47d4ff9957288465$var$count","$47d4ff9957288465$var$num","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","Math","random","delay","$47d4ff9957288465$var$stopFunc","value","addEventListener","event","Number","preventDefault","setTimeout","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","timerId","setInterval","delay4","clearInterval","delay5"],"version":3,"file":"03-promises.64cf8c22.js.map"}